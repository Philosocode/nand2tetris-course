// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux(in=in, sel=sel[2], a=o1, b=o2);
    DMux4Way(in=o1, sel=sel[0..1], a=a, b=b, c=c, d=d);
    DMux4Way(in=o2, sel=sel[0..1], a=e, b=f, c=g, d=h);
    
    /*
    DMux4Way(in=in, sel=sel[0..1], a=outa, b=outb, c=outc, d=outd);
    DMux4Way(in=in, sel=sel[0..1], a=oute, b=outf, c=outg, d=outh);

    Mux(a=outa, b=outb, sel=sel[2], out=muxabout);
    Mux(a=outc, b=outd, sel=sel[2], out=muxcdout);
    Mux(a=oute, b=outf, sel=sel[2], out=muxefout);
    Mux(a=outg, b=outh, sel=sel[2], out=muxghout);

    DMux(in=muxabout, sel=sel[2], a=a, b=b);
    DMux(in=muxcdout, sel=sel[2], a=c, b=d);
    DMux(in=muxefout, sel=sel[2], a=e, b=f);
    DMux(in=muxghout, sel=sel[2], a=g, b=h);
    */
}